//整形提升
#include <stdio.h>
void main()
{
	char c = 1;
	printf("%u\n", sizeof(c));
	printf("%u\n", sizeof(+c));
	//由于添加了"+"号这个运算符号，char类型变为int，进行了整形提升，储存空间发生了变化。
	printf("%u\n", sizeof(!c));
}
__________________________________
#include <stdio.h>
#include <stdlib.h>
//实现十进制转二进制。
void main()
{
	int i = 0;
	int n = 0;
	int tmp = 0;
	scanf("%d", &n);
	static int arr[] = { 0 };
	system("cls");
	/*64是2的6次，但是需要（6+1）个数组储存。
	总之一个数<=2的n次，则需要（n+1)个二进制数组空间来储存*/
	while (n)
	{
		if (n % 2 == 0)
			arr[i] = 0;
		else if(n%2==1)
			arr[i] = 1;
		i++;
		n /= 2;
	}
	int N = i;
	for (i = 0; i < N / 2; i++)
	{
		tmp = arr[i];
		arr[i] = arr[N - 1 - i];
		//当i=0时，N-i等于N，当i=1时，N-i等于倒数第二个值的下标。
		arr[N - 1 - i] = tmp;
	}
	for (i = 0; i < N; i++)
		printf("%d ", arr[i]);
}
_________________________________
用异或实现交换两个变量
#include <stdio.h>
void main()
{
	int a = 3;
	int b = 5;
	printf("a=%d b=%d", a, b);
	a = a ^ b;
	b = a ^ b;
	a = a ^ b;
	printf("\na=%d b=%d", a, b);
}
________________________________
#include <stdio.h>
void main()
{
	int n = 0;
	scanf("%d", &n);
	if (n == 1)
	{
		printf("1");
		return 0;
	}
	printf("%d", n);
	while (n != 1)
	{
		if (n % 2 == 0)
		{
			n /= 2;
			printf("->%d", n);
			continue;
		}
		if (n % 2 == 1)
		{
			n = 3 * n + 1;
			printf("->%d", n);
			continue;
		}
	}
}
_________________________________
//实现十进制转十六进制。
#include <stdio.h>
#include <stdlib.h>
void main()
{
	int n = 0;
	static char arr[] = { 0 };
	//为了输出字母将arr[]数组定义为字符也就是char类型，该类型可以存放数字。
	system("cls");
	int i = 0;
	scanf("%d", &n);
	while (n)
	{
		if (n <= 9)
		{
			arr[i] = n;
			i++;
			n /= 16;
		}
		if (n % 16 == 6)
		{
			arr[i] = 'A';
			i++;
			n /= 16;
		}
		if (n % 16 == 5)
		{
			arr[i] = 'B';
			i++;
			n /= 16;
		}
		if (n % 16 == 4)
		{
			arr[i] = 'C';
			i++;
			n /= 16;
		}
		if (n % 16 == 3)
		{
			arr[i] = 'D';
			i++;
			n /= 16;
		}
		if (n % 16 == 2)
		{
			arr[i] = 'E';
			i++;
			n /= 16;
		}
		if (n % 16 == 1)
		{
			arr[i] = 'F';
			i++;
			n /= 16;
		}
		if (n % 16 == 0)
		{
			arr[i] = 0;
			i++;
			n /= 16;
		}
	}
	int N = i;
	int tmp = 0;
	for (i = 0; i < N / 2; i++)
	{
		tmp = arr[i];
		arr[i] = arr[N - 1 - i];
		arr[N - 1 - i] = tmp;
	}
	for (i = 0; i < N; i++)
	{
		printf("%c",arr[i]);
		//%c格式不要打错了，是字符类型所以必须用%c。
	}
}
__________________________________________
#include <stdio.h>
//数据结构
struct stu
{
	char name[20];
	int age;
	char id[10];
};
void main()
{
	struct stu s1 = { "张三",20,"10086sb" };
	struct stu* ps = &s1;
	printf("%s\n", ps->name);
	printf("%d\n", ps->age);
	printf("%s\n", ps->id);
}
