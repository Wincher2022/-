#include <stdio.h>
void main()
{
	int a = 0x11223344;
	char* p = (char*)&a;
	//内存存放十六进制
	//指针p里面放的是44332211，一般是小端模式，低位放低地址，高位放高地址
	//char类型占1个字节
	*p = 0;
	//内存里面存放的数字变为00332211
	printf("%x", a);
	//打印时还原，打印11223300
}
______________________________
#include <stdio.h>
void main()
{
	int arr[] = { 1,2,3,4,5 };
	short* p = (short*)arr;
	int i;
	for (i = 0; i < 4; i++)
	{
		*(p + i) = 0;
		//short类型连续访问两个字节，而int一个元素占4个字节，所以该循环作用是使数组前两个元素
		//变为0
		//所以输出0 0 3 4 5
	}
	for (i = 0; i < 5; i++)
	{
		printf("%d ", arr[i]);
	}
}
_____________________________
#include <stdio.h>
//初始化一个数组，使其各个元素都为0;
void init(int arr[], int sz)
{
	int i;
	for (i = 0; i < sz; i++)
	{
		arr[i] = 0;
	}
}
void print(int arr[], int sz)
{
	int i;
	for (i = 0; i < sz; i++)
	{
		printf("%d ", arr[i]);
	}
}
void main()
{
	int arr[10] = { 0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	init(arr, sz);
	print(arr, sz);
}
___________________________
#include <stdio.h>
int main()
{
	int a = 1;
	//经调试，数据存储方式为小端模式;
	// 如下:
	//01 00 00 00
	return 0;
}
